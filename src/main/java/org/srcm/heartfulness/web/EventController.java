package org.srcm.heartfulness.web;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.env.Environment;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.srcm.heartfulness.encryption.decryption.AESEncryptDecrypt;
import org.srcm.heartfulness.model.Program;
import org.srcm.heartfulness.service.ProgramService;

@Controller
public class EventController {

	@Autowired
	AESEncryptDecrypt encryptDecrypt;

	@Autowired
	Environment env;

	@Autowired
	ProgramService programService;


	@RequestMapping(value = "/updateevent", method = RequestMethod.GET)
    public String showEventForm(@RequestParam(required= false,value="id") String encryptedValue,Model model) {
        String eventId=null;
            eventId= encryptDecrypt.decrypt(encryptedValue, env.getProperty("security.encrypt.token"));
            Program program = programService.findByAutoGeneratedEventId(eventId);
            if(program.getProgramId()>0){
	            model.addAttribute("program",program);
	            return "eventsForm";
            }else{
            	model.addAttribute("eventmsg","UnAuthorized access.");
                return "eventsuccess";
            }
    }

    @RequestMapping(value="/createEvent", method=RequestMethod.POST)
    public String createProgram(@ModelAttribute("program") Program program,Model model,BindingResult bindingresults){
    	if(!bindingresults.hasErrors()){
	    	programService.createProgram(program);
	        model.addAttribute("eventmsg","Event has been successfully updated.");
	        return "eventsuccess";
    	}else{
    		return "redirect:updateevent?id="+program.getProgramId();
    	}
    }

}
