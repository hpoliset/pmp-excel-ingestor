package org.srcm.heartfulness.service;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.dao.DataAccessResourceFailureException;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.srcm.heartfulness.constants.CoordinatorAccessControlConstants;
import org.srcm.heartfulness.constants.ErrorConstants;
import org.srcm.heartfulness.model.Program;
import org.srcm.heartfulness.model.SecondaryCoordinatorRequest;
import org.srcm.heartfulness.model.json.response.CoordinatorAccessControlErrorResponse;
import org.srcm.heartfulness.model.json.response.CoordinatorAccessControlResponse;
import org.srcm.heartfulness.model.json.response.CoordinatorAccessControlSuccessResponse;
import org.srcm.heartfulness.model.json.response.ErrorResponse;
import org.srcm.heartfulness.repository.CoordinatorAccessControlRepository;

/**
 * 
 * @author himasreev
 *
 */
@Service
public class CoordinatorAccessControlServiceImpl implements CoordinatorAccessControlService {

	private static Logger LOGGER = LoggerFactory.getLogger(CoordinatorAccessControlServiceImpl.class);

	@Autowired
	CoordinatorAccessControlRepository coordntrAccssCntrlRepo;

	@Override
	public CoordinatorAccessControlResponse addSecondaryCoordinatorRequest(String autoGeneratedEventId,String userEmail) {

		Program program = coordntrAccssCntrlRepo.getProgramIdByEventId(autoGeneratedEventId);
		int userId = coordntrAccssCntrlRepo.getUserIdbyUserEmail(userEmail);

		if(program.getProgramId() == 0){
			return new CoordinatorAccessControlErrorResponse(ErrorConstants.STATUS_FAILED,"Request couldnot be completed.Invalid Event Id");
		}else if(userId == 0){
			return new CoordinatorAccessControlErrorResponse(ErrorConstants.STATUS_FAILED,"Request couldnot be completed.User email is not registered with MYSRCM");
		}else{
			SecondaryCoordinatorRequest scReq = new SecondaryCoordinatorRequest();
			scReq.setProgramId(program.getProgramId());
			scReq.setUserId(userId);
			scReq.setRequestedBy(userEmail);
			scReq.setStatus(CoordinatorAccessControlConstants.COORDINATOR_DEFAULT_STATUS);
			coordntrAccssCntrlRepo.saveSecondaryCoordinatorRequest(scReq);
			//send mail to preceptor and coordinator
			
			return new CoordinatorAccessControlSuccessResponse(ErrorConstants.STATUS_SUCCESS, "Your request is completed.");
		}
	}


}
